{"version":3,"sources":["components/card/card.jsx","components/card-list/cardlist.jsx","components/Searchbox/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","firstname","Cardlist","id","monsters","map","Searchbox","type","placeholder","onChange","e","this","setState","Searchfield","target","value","console","log","state","App","name","fetch","then","response","json","body","data","filteredmonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,EAAO,SAACC,GACjB,OAAQ,sBAAMC,UAAU,iBAAhB,UACJ,qBAAKC,IAAI,kBAAkBC,IAAG,+BAA0BH,EAAMI,QAAQC,aACtE,mCAAOL,EAAMI,QAAQC,iBCFhBC,EAAS,SAACN,GACvB,IAAIO,EAAG,EACP,OAAO,qBAAKN,UAAU,WAAf,SAEND,EAAMQ,SAASC,KAAI,SAACL,GACrB,OAAO,cAAC,EAAD,CAAiBA,QAASA,GAAfG,WCNJG,G,MAAU,SAASV,GAGhC,OAAU,qBAAKC,UAAU,YAAf,SAA2B,uBACrCU,KAAK,SAELC,YAAY,eACZC,SAAU,SAACC,GACTd,EAAMe,KAAKC,SAAS,CAAEC,YAAaH,EAAEI,OAAOC,QAAS,WACnDC,QAAQC,IAAIrB,EAAMe,KAAKO,YAJvB,cC8CUC,E,kDAjDb,aAAe,IAAD,8BACZ,gBACKD,MAAQ,CACXd,SAAU,CACR,CACEgB,KAAM,UACNjB,GAAI,GAEN,CACEiB,KAAM,eACNjB,GAAI,GAEN,CACEiB,KAAM,OACNjB,GAAI,IAGRU,YAAa,IAjBH,E,qDAoBd,WAAqB,IAAD,OAElBQ,MAAM,oDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKb,SAAS,CAAER,SAAUqB,EAAKC,Y,oBAKrC,WACE,MAAkCf,KAAKO,MAA/Bd,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YAEZc,EAAmBvB,EAASwB,QAAO,SAAC5B,GAAa,IAAD,EACrD,iBAAOA,EAAQC,iBAAf,aAAO,EAAmB4B,cAAcC,SAASjB,MAKlD,OACE,sBAAKhB,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWc,KAAMA,OACjB,cAAC,EAAD,CAAUP,SAAUuB,W,GA5CVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c65b5554.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css'\r\n\r\nexport const Card = (props) => {\r\n    return (<div  className='card-container'>\r\n        <img alt=\"api not working\" src={`https://robohash.org/${props.monster.firstname}`}></img>\r\n        <h1 > {props.monster.firstname}</h1></div>)\r\n\r\n}","import React from 'react';\r\nimport './cardlist.css'\r\nimport {Card} from '../card/card';\r\n\r\nexport const Cardlist=(props)=>{\r\nvar id=0;\r\nreturn(<div className='cardlist'> \r\n\r\n{props.monsters.map((monster) => {\r\nreturn(<Card key={id++} monster={monster}>\r\n</Card>) ;\r\n  })}\r\n  </div>)\r\n\r\n};","import React from 'react';\r\nimport './Searchbox.css';\r\n\r\nexport  const Searchbox=function(props){\r\n\r\n\r\n return   (<div className='Searchbox'><input\r\n type=\"search\"\r\n key=\"search\"\r\n placeholder=\"Search Robot\"\r\n onChange={(e) => {\r\n   props.this.setState({ Searchfield: e.target.value }, () => {\r\n     console.log(props.this.state);\r\n   });\r\n }}\r\n></input></div>);\r\n}","import \"./App.css\";\nimport { Component } from \"react\";\nimport { Cardlist } from \"./components/card-list/cardlist.jsx\";\nimport {Searchbox} from \"./components/Searchbox/Searchbox\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [\n        {\n          name: \"dracula\",\n          id: 1,\n        },\n        {\n          name: \"frankenstein\",\n          id: 2,\n        },\n        {\n          name: \"raka\",\n          id: 3,\n        },\n      ],\n      Searchfield: \"\",\n    };\n  }\n  componentDidMount() {\n   \n    fetch(\"https://fakerapi.it/api/v1/persons?_quantity=100\")\n      .then((response) => response.json())\n      .then((body) => {\n        this.setState({ monsters: body.data });\n      });\n  }\n\n \n  render() {\n    const { monsters, Searchfield } = this.state;\n\n    const filteredmonsters = monsters.filter((monster) => {\n     return monster.firstname?.toLowerCase().includes(Searchfield);\n     \n    });\n\n\n    return (\n      <div className=\"App\">\n        <h1>Robot Factory</h1>\n        <Searchbox this={this} ></Searchbox>\n        <Cardlist monsters={filteredmonsters}></Cardlist>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}